# Ziver Chain: Block Structure with Real Cryptography
use { Crypto } from "./crypto.zx"

entity Block:
    index: integer
    timestamp: integer  
    data: text
    previous_hash: text
    hash: text
    nonce: integer
    signature: text?  # For validator signatures

action createBlock(index: integer, data: text, previous_hash: text) -> Block:
    let crypto = Crypto()
    let timestamp = 1234567890  # Will replace with real time
    let nonce = 0
    
    # Calculate real hash
    let content = string(index) + string(timestamp) + data + previous_hash + string(nonce)
    let hash = crypto.hash_data(content)
    
    return Block(index, timestamp, data, previous_hash, hash, nonce)

action mineBlock(block: Block, difficulty: integer) -> Block:
    """
    Simple Proof-of-Work mining simulation
    """
    let crypto = Crypto()
    let target = "0" * difficulty
    
    while true:
        let content = string(block.index) + string(block.timestamp) + block.data + block.previous_hash + string(block.nonce)
        let hash = crypto.hash_data(content)
        
        if hash.startsWith(target):
            block.hash = hash
            return block
        
        block.nonce = block.nonce + 1

# Test with real hashing
print "⛏️ Testing Block Mining..."
let genesis = createBlock(0, "Genesis Block", "0")
let mined_block = mineBlock(genesis, 2)  # Difficulty 2

print "Genesis Block Mined:"
print "  Hash: " + mined_block.hash
print "  Nonce: " + string(mined_block.nonce)
print "  Valid: " + string(mined_block.hash.startsWith("00"))